server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}


limit_conn_zone $server_name zone=servers:10m;

server {

    listen 443 ssl;
    server_name ${server_name};

    limit_conn servers 1000;

    ssl_certificate           /run/secrets/fullchain1.pem;
    ssl_certificate_key       /run/secrets/privkey1.pem;

    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    access_log            /var/log/nginx/access.log main;
    error_log             /var/log/nginx/error.log warn;

    client_max_body_size    20000M;
    proxy_send_timeout      120;
    proxy_read_timeout      120;
    proxy_request_buffering off;
    proxy_buffering         off;

    #auth_basic "kibana user";
    #auth_basic_user_file /etc/nginx/pwd;
    
    location / {
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      proxy_pass          http://kibana:5601;

      proxy_redirect      http://kibana:5601 ${root_url};
    }


    location /elasticsearch {
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      rewrite             /elasticsearch/(.*) /$1 break;

      proxy_pass          http://elasticsearch:9200;

      proxy_redirect      http://elasticsearch:9200 ${root_url};
    }
}
